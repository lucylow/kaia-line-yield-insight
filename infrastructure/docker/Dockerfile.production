# Multi-stage build for LINE Yield Platform
FROM node:18-alpine AS base

# Install pnpm
RUN npm install -g pnpm

WORKDIR /app

# Copy package files
COPY package*.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY components.json ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Frontend build stage
FROM base AS frontend-builder

# Copy frontend source
COPY src/ ./src/
COPY public/ ./public/
COPY index.html ./
COPY vite.config.js ./
COPY tailwind.config.js ./
COPY tailwind.config.ts ./
COPY postcss.config.js ./
COPY tsconfig*.json ./
COPY eslint.config.js ./

# Build frontend
RUN pnpm build

# Backend build stage
FROM base AS backend-builder

# Copy backend source
COPY backend/ ./backend/

# Build backend
WORKDIR /app/backend
RUN pnpm build

# Production stage
FROM node:18-alpine AS production

# Install pnpm
RUN npm install -g pnpm

WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S kaia -u 1001

# Copy built frontend
COPY --from=frontend-builder /app/dist ./dist

# Copy built backend
COPY --from=backend-builder /app/backend/dist ./backend/dist
COPY --from=backend-builder /app/backend/package*.json ./backend/
COPY --from=backend-builder /app/backend/node_modules ./backend/node_modules

# Copy shared dependencies
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/package*.json ./

# Copy environment files
COPY env.example ./.env.example
COPY backend/env.example ./backend/.env.example

# Copy documentation
COPY README.md ./
COPY DEPLOYMENT_GUIDE.md ./

# Change ownership
RUN chown -R kaia:nodejs /app

USER kaia

# Expose ports
EXPOSE 3000 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/health || exit 1

# Start both frontend and backend
CMD ["sh", "-c", "cd backend && pnpm start & cd .. && pnpm preview --host 0.0.0.0 --port 3000"]
